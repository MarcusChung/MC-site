---
import { Image } from "astro:assets";
import Code from "../../components/Code.astro";
import BlogHeader from "../../components/Header.astro";
import serverOverviewImg from "../../images/PZ_ARM_Overview.png";
import BlogLayout from "../../layouts/Layout.astro";
import "../../styles/global.css";
---
<BlogHeader title="Setting Up Your Server" date="February 8, 2025" />
<BlogLayout
  title="Setting Up Your Server"
  description="A detailed guide on setting up your server from scratch."
>

  <div class="container max-w-7xl mx-auto bg-[#ffffff] dark:bg-[#0e101a] p-10">
    <section class="max-w-none mx-auto mb-8">
      <h2>Introduction</h2>
      <p>
        At present, Project Zomboid lacks support for ARM64 servers, 
        which complicates the establishment of a multiplayer server. 
        To circumvent this limitation, we will utilize an emulator. 
        This guide outlines a comprehensive, step-by-step procedure 
        for configuring a server using an effective solution, 
        designed to accommodate beginners.
      </p>
    </section>

    <section class="max-w-none mx-auto my-8">
      <h2>Prerequisites</h2>
      <p>An Oracle Cloud VM instance with the following properties:</p>
      <ul class="font-light dark:text-blue-400">
        <li>Ampere VM.Standard.A1.Flex OR VM.Standard.E2.1.Micro</li>
        <li>Canonical Ubuntu 22.04</li>
        <li>Open UDP ports 16261 & 16262 in Oracle firewall rules.</li>
      </ul>
      <p>
        If you're unfamiliar with setting up a VM instance using Oracle Cloud,
        check out this <a
          href="https://www.youtube.com/watch?v=0kFjEUDJexI&list=WL&index=3&t=1215s"
          class="underline font-bold"
        >
        video
        </a> (watch until 12:51 for the relevant parts).
      </p>
    </section>

    <section class="max-w-none mx-auto my-8">
      <h2>Setting Up the Server</h2>
      <h3>1. Accessing the Terminal</h3>
      <p>
        Use your preferred method to access the terminal: [SSH / PuTTY (if you
        don't know how, watch the video)]
      </p>
      <h3>2. Root access</h3>
      <p>Log in as root user if you don't want to continually add 'sudo' in front of every command.</p>
      <Code codeSnippet="sudo su"/>

      <h3>3. Update the System</h3>
      <p>Update and upgrade the package index:</p>
      <Code codeSnippet="sudo apt-get update && sudo apt-get upgrade" />

      <h3>4. Set Up the Firewall</h3>
      <p>If not installed, install UFW:</p>

      <Code codeSnippet="sudo apt install ufw" />
      <p>Enable UFW and allow the necessary ports:</p>
      <Code
        codeSnippet={`sudo ufw enable
sudo ufw allow 16261/udp
sudo ufw allow 16262/udp
sudo ufw reload`}
      />
    </section>

    <section class="max-w-none mx-auto my-8">
      <h3>5. Install Docker</h3>
      <p>Run the following command to install Docker:</p>
      <Code
        codeSnippet="curl -fsSL test.docker.com -o get-docker.sh && sh get-docker.sh"
      />
      <h3>6. Run the Docker Container</h3>
      <p>Pull the required Docker image and create a container:</p>
      <Code codeSnippet="docker pull teriyakigod/steamcmd:arm64" />

      <h3>7. Deploy and run the docker container</h3>
      <Code
        codeSnippet={`run --entrypoint "/bin/sh" -p 16261:16261/udp -p 16262:16262/udp -it -u root teriyakigod/steamcmd:arm64`}
      />

      <h3>8. Install a Text Editor</h3>
      <p>
        Once inside the container as root, run the following command to install
        a text editor:
      </p>
      <Code codeSnippet="apt-get install nano" />

      <h3>9. Update the Package Index</h3>
      <p>Update the package index of the container with:</p>
      <Code codeSnippet="sudo apt-get update && sudo apt-get upgrade" />

      <h3>10. Install Screen</h3>
      <p>
        To keep the server running even when the terminal is closed, install <code
          >screen</code
        >:
      </p>
      <Code codeSnippet="sudo apt install screen -y" />

      <h3>11. Define CPU Frequency for SteamCMD</h3>
      <p>Before running SteamCMD, define the CPU frequency:</p>
      <Code codeSnippet="export CPU_MHZ=2000" />

      <h3>12. Launch the Zomboid Server</h3>
      <p>Login as the <code>steam</code> user and run SteamCMD:</p>
      <Code
        codeSnippet={`sudo -u steam -i
cd Steam
FEXBash ./steamcmd.sh`}
      />

      <section class="max-w-none mx-auto my-8">
        <h2>Common Issues</h2>
        <p>
          If you encounter errors like <a
            href="https://theindiestone.com/forums/index.php?/topic/47417-dedicated-server-on-linux-vps-jre-crashes/"
            >this</a
          >, try the following:
        </p>
        <ol class="text-[#B6B9C0]">
          <li>Edit the <code>ProjectZomboid64.json</code> file.</li>
          <li>
            Change the <code>"UseZGC"</code> line to <code>"UseG1GC"</code>.
          </li>
          <li>Restart the server.</li>
        </ol>

        <h2>Keep the server running</h2>
        <p>
          Use <code>screen</code> to keep the server running in the background:
          <Code codeSnippet="screen FEXBash ./start-server.sh" />

          <p>Detach from the session with </p>
          <code>Ctrl + A, then D.</code>
          
        </p>
      </section>
      <!-- 
    <section class="max-w-none mx-auto my-8">
      
    </section> -->
      <div class="relative flex items-center justify-center">
        <section
          class="max-w-none mx-auto pb-4 flex flex-col md:flex-row md:items-center md:space-x-6"
        >
          <div class="md:w-1/2">
            <h2>Additional Tips</h2>
            <h3>1. Screen Session Management</h3>
            <h4>Reattach to a Screen Session</h4>
            <pre><code>screen -r</code></pre>

            <h4>Check Running Sessions</h4>
            <pre><code>screen -ls</code></pre>

            <h3>2. Docker Tips</h3>
            <p>Basic Docker commands for managing your containers:</p>
            <h4>Checking Containers</h4>
            <pre><code>docker ps</code></pre>
            <p>List all containers:</p>
            <pre><code>docker ps -a</code></pre>

            <h4>Attaching to a Running Container</h4>
            <pre><code>docker exec -it &lt;container_id&gt; /bin/sh</code></pre>

            <h4>Stopping and Removing Containers</h4>

            <pre><code>docker stop &lt;container_id&gt;
docker rm &lt;container_id&gt;</code></pre>
          </div>
          <div class="md:w-1/2">
            <Image
              src={serverOverviewImg}
              alt="Server Overview"
              class="mx-auto block w-3/4 md:w-full border-6 border-orange-300 rounded-lg"
            />
          </div>
        </section>
      </div>
      <p class="text-center">
        Special thanks to <strong>makosski52</strong> for their guide on using FAX-emu
        to run a Project Zomboid server.
      </p>
    </section>
  </div>
</BlogLayout>
