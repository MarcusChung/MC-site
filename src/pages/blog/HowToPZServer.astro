---
import { Image } from "astro:assets";
import BlogHeader from "../../components/Header.astro";
import serverOverviewImg from "../../images/PZ_ARM_Overview.png";
import BlogLayout from "../../layouts/Layout.astro";
import "../../styles/global.css";
---
<BlogHeader title="Setting Up Your Server" date="February 8, 2025" />
<BlogLayout
  title="Setting Up Your Server"
  description="A detailed guide on setting up your server from scratch."
>
  <section class="prose prose-lg max-w-none mx-auto my-8">
    <h2>Introduction</h2>
    <p>
      Currently, Project Zomboid does not support ARM64 servers, making it
      difficult to set up a multiplayer server. We will use an emulator to
      bypass this restriction. This guide provides a step-by-step process for
      setting up a server using a working solution, suitable for beginners.
    </p>
  </section>

  <section class="prose prose-lg max-w-none mx-auto my-8">
    <h2>Prerequisites</h2>
    <p>An Oracle Cloud VM instance with the following properties:</p>
    <ul>
      <li>Ampere VM.Standard.A1.Flex OR VM.Standard.E2.1.Micro</li>
      <li>Canonical Ubuntu 22.04</li>
      <li>Open UDP ports 16261 & 16262 in Oracle firewall rules.</li>
    </ul>
    <p>
      If you're unfamiliar with setting up a VM instance using Oracle Cloud,
      check out this <a href="https://www.youtube.com/watch?v=0kFjEUDJexI&list=WL&index=3&t=1215s" target="_blank">
        video guide
      </a> (watch until 12:51 for the relevant parts).
    </p>
  </section>

  <section class="prose prose-lg max-w-none mx-auto my-8">
    <h2>Setting Up the Server</h2>
    <h3>1. Accessing the Terminal</h3>
    <p>Use your preferred method to access the terminal: <strong>SSH</strong> or <strong>PuTTY</strong>.</p>
    <pre><code>sudo su</code></pre>

    <h3>2. Update the System</h3>
    <p>Update and upgrade the package index:</p>
    <pre><code>sudo apt-get update && sudo apt-get upgrade</code></pre>

    <h3>3. Set Up the Firewall</h3>
    <p>If not installed, install UFW:</p>
    <pre><code>sudo apt install ufw</code></pre>
    <p>Enable UFW and allow the necessary ports:</p>
    <pre><code>
sudo ufw enable
sudo ufw allow 16261/udp
sudo ufw allow 16262/udp
sudo ufw reload
    </code></pre>
  </section>

  <section class="prose prose-lg max-w-none mx-auto my-8">
    <h3>4. Install Docker</h3>
    <p>Run the following command to install Docker:</p>
    <pre><code>curl -fsSL test.docker.com -o get-docker.sh && sh get-docker.sh</code></pre>

    <h3>5. Run the Docker Container</h3>
    <p>Pull the required Docker image and create a container:</p>
    <pre><code>
docker pull teriyakigod/steamcmd:arm64
docker run --entrypoint "/bin/sh" -p 16261:16261/udp -p 16262:16262/udp -it -u root teriyakigod/steamcmd:arm64
    </code></pre>
  </section>

  <section class="prose prose-lg max-w-none mx-auto my-8">
    <h2>Common Issues</h2>
    <p>If you encounter errors like <a href="https://theindiestone.com/forums/index.php?/topic/47417-dedicated-server-on-linux-vps-jre-crashes/">this</a>, try the following:</p>
    <ol>
      <li>Edit the <code>ProjectZomboid64.json</code> file.</li>
      <li>Change the <code>"UseZGC"</code> line to <code>"UseG1GC"</code>.</li>
      <li>Restart the server.</li>
    </ol>

    <h2>Keeping the Server Running</h2>
    <p>Use <code>screen</code> to keep the server running in the background:</p>
    <pre><code>screen FEXBash ./start-server.sh</code></pre>
    <p>Detach from the session with <code>Ctrl + A</code>, then <code>D</code>.</p>
  </section>

  <section class="prose prose-lg max-w-none mx-auto my-8">
    <h2>Additional Tips</h2>
    <h3>1. Screen Session Management</h3>
    <h4>Reattach to a Screen Session</h4>
    <pre><code>screen -r</code></pre>

    <h4>Check Running Sessions</h4>
    <pre><code>screen -ls</code></pre>

    <h3>2. Docker Tips</h3>
    <p>Basic Docker commands for managing your containers:</p>
    <h4>Checking Containers</h4>
    <pre><code>docker ps</code></pre>
    <p>List all containers:</p>
    <pre><code>docker ps -a</code></pre>

    <h4>Attaching to a Running Container</h4>
    <pre><code>docker exec -it &lt;container_id&gt; /bin/sh</code></pre>

    <h4>Stopping and Removing Containers</h4>
    <pre><code>
docker stop &lt;container_id&gt;
docker rm &lt;container_id&gt;
    </code></pre>
  </section>

  <section class="prose prose-lg max-w-none mx-auto my-8">
    <Image src={serverOverviewImg} alt="Server Overview" />
    <h3>Credits</h3>
    <p>
      Special thanks to <strong>makosski52</strong> for their guide on using FAX-emu to run a Project Zomboid server.
    </p>
  </section>
</BlogLayout>